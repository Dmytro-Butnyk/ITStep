// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lesson_5;

#nullable disable

namespace lesson_5.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20240422164845_init_1")]
    partial class init_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("ClientSequence");

            modelBuilder.HasSequence("PersonalSequence");

            modelBuilder.HasSequence("ProductSequence");

            modelBuilder.Entity("lesson_5.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [ClientSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("lesson_5.Models.Data.Call", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CallTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("ConsultantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ConsultantId");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("lesson_5.Models.Data.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("lesson_5.Models.Data.Supply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Supplies");
                });

            modelBuilder.Entity("lesson_5.Models.Personal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [PersonalSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("lesson_5.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [ProductSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("lesson_5.Models.Clients.Buyer", b =>
                {
                    b.HasBaseType("lesson_5.Models.Client");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("lesson_5.Models.Clients.Provider", b =>
                {
                    b.HasBaseType("lesson_5.Models.Client");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("lesson_5.Models.Personals.Consultant", b =>
                {
                    b.HasBaseType("lesson_5.Models.Personal");

                    b.ToTable("Consultants");
                });

            modelBuilder.Entity("lesson_5.Models.Personals.Manager", b =>
                {
                    b.HasBaseType("lesson_5.Models.Personal");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("lesson_5.Models.Products.Book", b =>
                {
                    b.HasBaseType("lesson_5.Models.Product");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("lesson_5.Models.Products.Cloth", b =>
                {
                    b.HasBaseType("lesson_5.Models.Product");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Clothes");
                });

            modelBuilder.Entity("lesson_5.Models.Products.Technique", b =>
                {
                    b.HasBaseType("lesson_5.Models.Product");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.ToTable("Techniques");
                });

            modelBuilder.Entity("lesson_5.Models.Data.Call", b =>
                {
                    b.HasOne("lesson_5.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lesson_5.Models.Personals.Consultant", "Consultant")
                        .WithMany("Calls")
                        .HasForeignKey("ConsultantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Consultant");
                });

            modelBuilder.Entity("lesson_5.Models.Data.Purchase", b =>
                {
                    b.HasOne("lesson_5.Models.Clients.Buyer", "Buyer")
                        .WithMany("Purchases")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lesson_5.Models.Personals.Manager", "Manager")
                        .WithMany("Sales")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lesson_5.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Manager");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("lesson_5.Models.Data.Supply", b =>
                {
                    b.HasOne("lesson_5.Models.Personals.Manager", "Manager")
                        .WithMany("Supplies")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lesson_5.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lesson_5.Models.Clients.Provider", "Provider")
                        .WithMany("Supplies")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Product");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("lesson_5.Models.Clients.Buyer", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("lesson_5.Models.Clients.Provider", b =>
                {
                    b.Navigation("Supplies");
                });

            modelBuilder.Entity("lesson_5.Models.Personals.Consultant", b =>
                {
                    b.Navigation("Calls");
                });

            modelBuilder.Entity("lesson_5.Models.Personals.Manager", b =>
                {
                    b.Navigation("Sales");

                    b.Navigation("Supplies");
                });
#pragma warning restore 612, 618
        }
    }
}
